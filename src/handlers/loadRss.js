import axios from 'axios';
import { uniqueId } from 'lodash';
import parserRss from '../parsers/parserRss';

const loadRss = (url, state) => {
  const id = uniqueId();
  const proxy = new URL(`https://allorigins.hexlet.app/get?url=${url}`);
  proxy.searchParams.set('disableCache', true);

  axios.get(proxy.toString())
    .catch(() => {
      state.feedback = state.i18n.t('loading.errors.errorNetWork');
    })
    .then((response) => parserRss(response))
    .catch(({ message }) => {
      if (message === 'errorParsing') state.feedback = state.i18n.t('loading.errors.errorResource');
    })
    .then((parsedRss) => {
      
    });
};

// –¥–æ–ø–∏—Å–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ loadRss, –Ω–∞–ø–∏—Å–∞—Ç—å watcher –¥–ª—è —ç—Ç–æ–≥–æ —Å–æ–±—ã—Ç–∏—è, –∏ –¥–ª—è –±–ª–æ–∫–∞–Ω—å—è –∫–Ω–æ–ø–∫–∏, –ø–æ–¥–∫–ª—é—á–∏—Ç—å –≤ —Å–æ–±—ã—Ç–∏–µ btnAddRssURL ‚å®Ô∏è
// –Ω—É–∂–µ–Ω –ª–∏ –Ω–æ–≤—ã–π —Ä–µ–Ω–¥–µ—Ä ü§î
export default loadRss;